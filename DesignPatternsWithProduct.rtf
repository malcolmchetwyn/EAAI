{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww28140\viewh11520\viewkind0
\deftab720
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \expnd0\expndtw0\kerning0
Design Patterns\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Best practices and guidance for your solutions\uc0\u8232 
\f0\b\fs28 Publish / Subscribe\uc0\u8232 
\f1\b0\fs24 Multiple publishers and subscribers sharing data through an event bus.\

\f0\b\fs28 Publish / Subscribe (Unique Copy)\uc0\u8232 
\f1\b0\fs24 Exchange messages via one or more channels in an event bus\

\f0\b\fs28 Fanout\uc0\u8232 
\f1\b0\fs24 Messages are delivered through a single message queue.\uc0\u8232 
\f0\b\fs28 Claim Check\uc0\u8232 
\f1\b0\fs24 Lower data volumes being sent through the event bus.\uc0\u8232 
\f0\b\fs28 Passed Messages\uc0\u8232 
\f1\b0\fs24 Segment the message handling logic into multiple components.\uc0\u8232 
\f0\b\fs28 Streaming\uc0\u8232 
\f1\b0\fs24 Unique copies of each message stream are sent to each subscriber.\uc0\u8232 
\f0\b\fs28 Queuing\uc0\u8232 
\f1\b0\fs24 Producers send messages to queues, which hold the messages until subscribers retrieve them.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f0\b\fs28 \cf0 Hospitality Loyalty Management Process\
\ls1\ilvl0
\f1\b0\fs24 The time based interactions of systems in a hospitality loyalty management process.\
\ls1\ilvl0
\f0\b\fs28 Retail Loyalty Management Process\
\ls1\ilvl0
\f1\b0\fs24 The time based interactions of systems in a retail loyalty management process.\
Data Replication and Heroku Connect\
\ls1\ilvl0
\f0\b\fs28 Bi-Directional Data Replication with Heroku Connect\
\ls1\ilvl0
\f1\b0\fs24 Use Heroku Connect in bidirectional data replication scenarios.\
Data Synchronization, Heroku Connect, Heroku Kafka\
\ls1\ilvl0
\f0\b\fs28 Data Synchronization Via Claim Check Messaging\
\ls1\ilvl0
\f1\b0\fs24 Syncronize data at scale with Heroku Postgres and Apache Kafka on Heroku.\
\ls1\ilvl0
\f0\b\fs28 Data Transformation at Scale with Passed Messages\
\ls1\ilvl0
\f1\b0\fs24 Handle complex, high volume data transformation with Apache Kafka on Heroku.\
\ls1\ilvl0
\f0\b\fs28 Data Synchronization at Scale with Heroku Connect\
\ls1\ilvl0
\f1\b0\fs24 Handle high volume API requests and sync data at scale with Heroku Connect\
\ls1\ilvl0
\f0\b\fs28 Data Synchronization with Salesforce Streaming Events\
\ls1\ilvl0
\f1\b0\fs24 Push data asynchronously with a streaming event architecture.\uc0\u8232 }